//for Ant filter
import org.apache.tools.ant.filters.ReplaceTokens

// *** alte Schreibweise für Gradle-Plugins ***
buildscript {
	repositories {
		if (project.hasProperty("maven_host")) {
			maven {
				url maven_host
				credentials {
					username maven_username
					password maven_password
				}
			}
		} else {
			maven {
      			url "https://plugins.gradle.org/m2/"
    		}
		}
	}
	dependencies {
		classpath "com.bmuschko:gradle-nexus-plugin:2.3.1"
		classpath "com.eriwen:gradle-js-plugin:2.14.1"
	}
}
apply plugin: "com.bmuschko.nexus"
apply plugin: "com.eriwen.gradle.js"

// *** neue Schreibweise für Gradle-Plugins ***
//plugins {
	//id "com.bmuschko:nexus" version "2.3.1"
	//id "com.eriwen.gradle.js" version "2.14.1"
//}

apply plugin: 'java'
apply plugin: 'maven'
	
//Für Publish ins lokale Artifactory
apply plugin: "maven-publish"
		
group = theGroup
version = theVersion
sourceCompatibility = theSourceCompatibility

//Declare your sources
def jsSrcDir = 'src/main/resources/META-INF/resources/static/scripts/nest'

javascript.source {
    dev {
        js {
            srcDir jsSrcDir
            include "*.js"
            exclude "nest.js"
        }
    }
}

combineJs {
    //encoding = "UTF-8"
    source = [
              "${jsSrcDir}/license.js",
              "${jsSrcDir}/require.js",
              "${jsSrcDir}/jquery-2.2.0.js",
              "${jsSrcDir}/../material/material.js",
              "${jsSrcDir}/nestbase.js",
              "${jsSrcDir}/nestui.js"
    ]
    dest = file(jsSrcDir + '/nest.js')
}

repositories {
	if (project.hasProperty("maven_host")) {
		maven {
			url maven_host
			credentials {
				username maven_username
				password maven_password
			}
		}
	} else {
		mavenCentral()
		mavenLocal()
	}
}

dependencies {
	compile ('de.nikem.nest:nest:1.7') {
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
	//These dependencies must be omitted for deployment in servlet container
	compileOnly 'javax.servlet:javax.servlet-api:4.0.0-b01'
	compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b02'
	compileOnly 'javax.websocket:javax.websocket-api:1.1'
	testCompile 'junit:junit:4.12'
}

test {
	systemProperties 'property': 'value'
}

[compileJava,compileTestJava]*.options*.encoding = 'UTF-8'

processResources {
	with copySpec {
		from 'src/main/resources/'
		filter(ReplaceTokens, tokens: ['version': version])
	}
}

modifyPom {
	project {
		name = "nest-web"
		description = "nest NikEm STack core web library"
		url "https://github.com/rasenderhase/nest-web"

		licenses {
			license {
				name = "The Apache Software License, Version 2.0"
				url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
				distribution = "repo"
			}
		}
		developers {
			developer {
				name = "Andreas Knees"
				email = "andreas.knees@nikem.de"
				organization = "nikem GmbH"
				organizationUrl = "http://www.nikem.de"
			}
		}
		scm {
			connection "scm:git:git@github.com/rasenderhase/nest-web.git"
			developerConnection "scm:git:git@github.com/rasenderhase/nest-web.git"
			url "scm:git:git@github.com/rasenderhase/nest-web.git"
		}
	}
}

/*
 * Publikation von SNAPSHOTs inslokale Artifactory-Repo:
 * $> gradle publishMavenJavaPublicationToMavenRepository
 */
publishing {
    repositories {
    	if (project.hasProperty("maven_host_snapshots")) {
	        maven {
	            url maven_host_snapshots
	            credentials {
					username maven_username
					password maven_password
				}
	        }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
			from components.java
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.10"
}
